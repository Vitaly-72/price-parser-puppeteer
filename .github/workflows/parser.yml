name: Price Parser

on:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * *'

jobs:
  parse-prices:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Cache node_modules
      uses: actions/cache@v3
      id: node-cache
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Cache Puppeteer browsers
      uses: actions/cache@v3
      id: puppeteer-cache
      with:
        path: ~/.cache/puppeteer
        key: ${{ runner.os }}-puppeteer-${{ hashFiles('package.json') }}
        restore-keys: |
          ${{ runner.os }}-puppeteer-

    - name: Install dependencies
      run: |
        if [ ! -d "node_modules" ]; then
          echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º npm –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
          npm install
        else
          echo "node_modules —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–∑ –∫—ç—à–∞"
        fi

        if [ ! -d ~/.cache/puppeteer ]; then
          echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Chrome –¥–ª—è Puppeteer..."
          npx puppeteer browsers install chrome
        else
          echo "Chrome —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑ –∫—ç—à–∞"
        fi

    - name: Run parser
      run: |
        node parser/puppeteer_parser.js

    - name: Commit results
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add results/prices.json
        git commit -m "ü§ñ Update prices $(date +'%Y-%m-%d %H:%M:%S')" || echo "No changes to commit"
        git push
